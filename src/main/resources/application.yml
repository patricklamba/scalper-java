# Configuration principale Spring Boot
spring:
  application:
    name: scalper-assistant

  # Configuration JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          time_zone: UTC
        temp:
          use_jdbc_metadata_defaults: false
    open-in-view: false

  # Configuration Jackson pour JSON
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: UTC

  # Configuration Cache
  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes

  # Configuration Task Scheduling
  task:
    scheduling:
      pool:
        size: 10
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100

# Configuration Actuator
management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,beans,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    build:
      enabled: true
    git:
      enabled: true

  # Métriques personnalisées
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# Configuration logging
logging:
  level:
    com.scalper: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"
  file:
    name: logs/scalper-assistant.log
    max-size: 100MB
    max-history: 30

# Configuration serveur
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  error:
    include-message: always
    include-binding-errors: always

# Configuration OpenAPI/Swagger
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  info:
    title: Scalper Assistant API
    description: Assistant du Scalper Éclairé - Multi-Sessions Trading API
    version: 1.0.0

---
# Profil Development - MODE SIMULATEUR
spring:
  config:
    activate:
      on-profile: dev

  # Database locale
  datasource:
    url: jdbc:postgresql://localhost:5433/scalper_db
    username: scalper_user
    password: pass123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis local
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2

  # JPA Development
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

# Configuration scalper pour développement - SIMULATEUR
scalper:
  sessions:
    timezone: "UTC"
    asia:
      start-hour: 0
      end-hour: 6
    london:
      start-hour: 7
      end-hour: 11
    newyork:
      start-hour: 12
      end-hour: 16

  patterns:
    detection:
      enabled: true
      min-confidence: 0.6
    asia-breakout:
      min-range-pips: 15
      max-range-pips: 100
      volume-confirmation: true
    london-retest:
      max-time-since-break: 4 # heures
      min-level-importance: 0.7
    intra-session-bounce:
      min-rejection-pips: 3
      max-level-age: 12 # heures

  screenshots:
    enabled: true
    base-path: "./screenshots"
    driver: chrome
    headless: true
    timeout: 10

  telegram:
    enabled: false # Désactivé en dev
    bot-token: ""
    chat-id: ""

  news:
    enabled: true
    sources:
      - forexfactory
      - investing
    min-impact: HIGH

  # ÉTAPE 3 - Configuration Broker SIMULATEUR uniquement
  broker:
    enabled: true
    type: CTRADER
    simulation-mode: true  # SIMULATEUR en dev

    simulation:
      speed-multiplier: 1
      volatility-factor: 1.0
      enable-realistic-spreads: true
      enable-weekend-gaps: true
      symbols:
        - symbol: "EURUSD"
          base-price: 1.0850
          daily-range-pips: 80
          spread-pips: 0.5
        - symbol: "XAUUSD"
          base-price: 1950.0
          daily-range-pips: 1500
          spread-pips: 20

  # ÉTAPE 3 - Configuration Market Data
  market-data:
    collection:
      enabled: true
      timeframes: ["M1", "M5", "M30"]
      max-history-candles: 1000
      collection-interval-seconds: 60

    cache:
      ttl-seconds: 300
      max-cache-size: 10000

    sessions:
      timezone: "UTC"
      asia-start: "00:00"
      asia-end: "06:00"
      london-start: "07:00"
      london-end: "11:00"
      newyork-start: "12:00"
      newyork-end: "16:00"

logging:
  level:
    com.scalper: DEBUG
    org.springframework.web: DEBUG

---
# Profil cTrader - API RÉELLE pour tests locaux
spring:
  config:
    activate:
      on-profile: ctrader

  # Database locale (même que dev)
  datasource:
    url: jdbc:postgresql://localhost:5433/scalper_db
    username: scalper_user
    password: pass123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis local
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2

  # JPA
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false

# Configuration cTrader API RÉELLE
scalper:
  # Mêmes configs que dev sauf broker
  sessions:
    timezone: "UTC"
    asia:
      start-hour: 0
      end-hour: 6
    london:
      start-hour: 7
      end-hour: 11
    newyork:
      start-hour: 12
      end-hour: 16

  patterns:
    detection:
      enabled: true
      min-confidence: 0.7
    asia-breakout:
      min-range-pips: 20
      max-range-pips: 80
      volume-confirmation: true
    london-retest:
      max-time-since-break: 3
      min-level-importance: 0.75
    intra-session-bounce:
      min-rejection-pips: 5
      max-level-age: 8

  screenshots:
    enabled: true
    base-path: "./screenshots"
    driver: chrome
    headless: true
    timeout: 15

  telegram:
    enabled: false # Désactivé en local
    bot-token: ""
    chat-id: ""

  news:
    enabled: true
    sources:
      - forexfactory
      - investing
    min-impact: HIGH

  # ÉTAPE 3 - Configuration Broker cTrader API RÉELLE
  broker:
    enabled: true
    type: CTRADER
    simulation-mode: false  # API RÉELLE

    ctrader:
      # Credentials OAuth2
      client-id: "17551_BHn2FEUPNaj1CdJnoiGtnjfKZBg9ovMK5NIxmY7RKw0WWUR1tS"
      client-secret: "EHeZm6ajOZ7LWCpl2QEWQXL68blj7gkBZsoS8OTxdRHp2ZbLb0"

      # URLs cTrader Open API
      base-url: "https://openapi.ctrader.com"
      redirect-uri: "http://localhost:8080/api/auth/ctrader/callback"

      # Account ID
      account-id: "patricklamba"

      # Configuration timeout et retry
      connection-timeout: 30000 # 30 secondes
      read-timeout: 60000       # 60 secondes
      max-retries: 3

  # Market Data - collecte plus fréquente pour API réelle
  market-data:
    collection:
      enabled: true
      collection-interval-seconds: 30  # Plus fréquent
      timeframes: ["M1", "M5", "M30"]
      max-history-candles: 1000

    cache:
      ttl-seconds: 60  # Cache plus court
      max-cache-size: 50000

    sessions:
      timezone: "UTC"
      asia-start: "00:00"
      asia-end: "06:00"
      london-start: "07:00"
      london-end: "11:00"
      newyork-start: "12:00"
      newyork-end: "16:00"

# Configuration RestTemplate pour cTrader API
ctrader:
  rest:
    connection-pool-size: 20
    max-connections-per-route: 10

# Logging spécifique cTrader
logging:
  level:
    com.scalper.service.broker.BrokerConnectionService: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

---
# Profil Docker - API RÉELLE
spring:
  config:
    activate:
      on-profile: docker

  # Database Docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:scalper_db}
    username: ${DB_USER:scalper_user}
    password: ${DB_PASS:pass123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis Docker
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    jedis:
      pool:
        max-active: 16
        max-idle: 8
        min-idle: 4

  # JPA Docker
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

# Configuration scalper pour Docker - API RÉELLE
scalper:
  sessions:
    timezone: "UTC"
    asia:
      start-hour: 0
      end-hour: 6
    london:
      start-hour: 7
      end-hour: 11
    newyork:
      start-hour: 12
      end-hour: 16

  patterns:
    detection:
      enabled: true
      min-confidence: 0.7
    asia-breakout:
      min-range-pips: 20
      max-range-pips: 80
      volume-confirmation: true
    london-retest:
      max-time-since-break: 3
      min-level-importance: 0.75
    intra-session-bounce:
      min-rejection-pips: 5
      max-level-age: 8

  screenshots:
    enabled: true
    base-path: "/app/screenshots"
    driver: chrome
    headless: true
    timeout: 15

  telegram:
    enabled: ${TELEGRAM_ENABLED:true}
    bot-token: ${TELEGRAM_BOT_TOKEN:}
    chat-id: ${TELEGRAM_CHAT_ID:}

  news:
    enabled: true
    sources:
      - forexfactory
      - investing
    min-impact: HIGH

  # ÉTAPE 3 - Configuration Broker cTrader Docker - API RÉELLE
  broker:
    enabled: ${BROKER_ENABLED:true}
    type: CTRADER
    simulation-mode: false  # API RÉELLE

    ctrader:
      client-id: "17551_BHn2FEUPNaj1CdJnoiGtnjfKZBg9ovMK5NIxmY7RKw0WWUR1tS"
      client-secret: "${CTRADER_CLIENT_SECRET:EHeZm6ajOZ7LWCpl2QEWQXL68blj7gkBZsoS8OTxdRHp2ZbLb0}"
      base-url: "https://openapi.ctrader.com"
      redirect-uri: "http://scalper-app:8080/api/auth/ctrader/callback"
      connection-timeout: 30000
      read-timeout: 60000
      max-retries: 3

  market-data:
    collection:
      enabled: true
      timeframes: ["M1", "M5", "M30"]
      max-history-candles: 1000
      collection-interval-seconds: 60

    cache:
      ttl-seconds: 300
      max-cache-size: 10000

    sessions:
      timezone: "UTC"
      asia-start: "00:00"
      asia-end: "06:00"
      london-start: "07:00"
      london-end: "11:00"
      newyork-start: "12:00"
      newyork-end: "16:00"

---
# Profil Production - API RÉELLE
spring:
  config:
    activate:
      on-profile: prod

  # Database Production
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Redis Production
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    timeout: 2000ms
    jedis:
      pool:
        max-active: 32
        max-idle: 16
        min-idle: 8

  # JPA Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

# Configuration scalper pour Production - API RÉELLE
scalper:
  sessions:
    timezone: "UTC"
    asia:
      start-hour: 0
      end-hour: 6
    london:
      start-hour: 7
      end-hour: 11
    newyork:
      start-hour: 12
      end-hour: 16

  patterns:
    detection:
      enabled: true
      min-confidence: 0.8
    asia-breakout:
      min-range-pips: 25
      max-range-pips: 70
      volume-confirmation: true
    london-retest:
      max-time-since-break: 2
      min-level-importance: 0.8
    intra-session-bounce:
      min-rejection-pips: 8
      max-level-age: 6

  screenshots:
    enabled: true
    base-path: "/app/screenshots"
    driver: chrome
    headless: true
    timeout: 20

  telegram:
    enabled: true
    bot-token: ${TELEGRAM_BOT_TOKEN}
    chat-id: ${TELEGRAM_CHAT_ID}

  news:
    enabled: true
    sources:
      - forexfactory
      - investing
    min-impact: HIGH

  # ÉTAPE 3 - Configuration Broker cTrader Production - API RÉELLE
  broker:
    enabled: true
    type: CTRADER
    simulation-mode: false  # API RÉELLE

    ctrader:
      client-id: "17551_BHn2FEUPNaj1CdJnoiGtnjfKZBg9ovMK5NIxmY7RKw0WWUR1tS"
      client-secret: "${CTRADER_CLIENT_SECRET}"
      base-url: "https://openapi.ctrader.com"
      redirect-uri: "${APP_BASE_URL}/api/auth/ctrader/callback"
      connection-timeout: 30000
      read-timeout: 60000
      max-retries: 5

  market-data:
    collection:
      enabled: true
      timeframes: ["M1", "M5", "M30"]
      max-history-candles: 2000
      collection-interval-seconds: 30  # Plus fréquent en prod

    cache:
      ttl-seconds: 180  # Cache plus court en prod
      max-cache-size: 20000

    sessions:
      timezone: "UTC"
      asia-start: "00:00"
      asia-end: "06:00"
      london-start: "07:00"
      london-end: "11:00"
      newyork-start: "12:00"
      newyork-end: "16:00"

logging:
  level:
    com.scalper: INFO
    org.springframework.web: WARN
    org.hibernate: WARN